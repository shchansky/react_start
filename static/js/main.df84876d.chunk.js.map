{"version":3,"sources":["redux/messages-reducer.js","components/Users/users.module.css","hoc/withAuthRedirect.js","api/api.js","components/Navbar/Navbar.module.css","reportWebVitals.js","redux/sidebar-reducer.js","utils/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","logo.svg","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","assets/images/user.png","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Login/Login.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","App.js","hoc/withSuspense.js","index.js","assets/images/preloader.gif","components/common/Preloader/Preloader.jsx","components/common/FormsControl/FormsControl.js","components/common/FormsControl/FormsControl.module.css","utils/validators/validators.js","components/Header/Header.module.css","components/common/Paginator/Paginator.module.css","redux/profile-reducer.js"],"names":["SEND_MESSAGE","initialState","dialogs","id","name","messages","message","updateSendMessageCreator","newMessageBody","type","messagesReducer","state","action","body","module","exports","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponet","this","props","to","React","connect","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET__CURRENT_PAGE","SET__TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","SET_USER_DATA","setAuthUserData","payload","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","messagesPage","sidebar","usersPage","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Header","className","css","header","src","loginBlog","onClick","HeaderContainer","Navbar","classes","nav","item","excretion","activeClassName","activeLink","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","styles","paginator","pageNum","cn","selectedPage","pageNumber","User","user","photos","small","userPhoto","disabled","some","Users","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","Preloader","bind","totalCount","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","CreateField","required","Input","style","formSummaryError","length","stopSubmit","_error","formData","News","Music","Settings","DialogsContainer","lazy","ProfileContainer","App","initializeAPP","path","render","Suspense","fallback","AppContainer","withRouter","promise","Promise","all","JSApp","ReactDOM","document","getElementById","backgroundColor","preloader","FormControl","input","meta","child","hasError","touched","formControl","children","Textarea","restProps","placeholder","validators","component","text","validate","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","p","postId"],"mappings":"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","file":"static/js/main.df84876d.chunk.js","sourcesContent":["\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: \"Michail\" },\r\n        { id: 2, name: \"Oxana\" },\r\n        { id: 3, name: \"Slava\" },\r\n        { id: 4, name: \"Lera\" },\r\n        { id: 5, name: \"Lena\" },\r\n        { id: 5, name: \"Lena\" },\r\n    ],\r\n    messages: [\r\n        { id: 1, message: \"Hi\" },\r\n        { id: 2, message: \"how are you?\" },\r\n        { id: 3, message: \"Privet!!\" },\r\n        { id: 4, message: \"Privet!!\" },\r\n        { id: 5, message: \"Privet!!\" },\r\n    ],\r\n}\r\n\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n\r\n\r\n\r\n    switch (action.type) {\r\n\r\n            \r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return  {\r\n                ...state,\r\n                messages: [...state.messages, { id: 6, message: body }],\r\n            };\r\n            \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const updateSendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody })\r\n\r\n\r\n\r\n\r\nexport default messagesReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__250Jm\",\"selectedPage\":\"users_selectedPage__3wZm-\",\"pageNumbers\":\"users_pageNumbers__tEIVJ\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponet extends React.Component {\r\n        render() {\r\n            if (this.props.isAuth === false) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponet = connect(mapStateToPropsForRedirect)(RedirectComponet)\r\n\r\n\r\n    return ConnectedAuthRedirectComponet\r\n}\r\n\r\n\r\n","import * as axios from 'axios';\r\n\r\n\r\n// const baseUrl = 'https://social-network.samuraijs.com/api/1.0/'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"6bf479bf-fcae-4561-a59e-07ba9dc0a182\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        // return instance.get(`profile/` + userId)\r\n\r\n\r\n\r\n        //или так\r\n        console.warn('Obsolete method. Pleas used profileAPI object.')\r\n        return profileAPI.getProfile(userId)\r\n\r\n\r\n    },\r\n}\r\n\r\n\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status })\r\n    },\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const authAPI = {\r\n\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe })\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3__R3\",\"item\":\"Navbar_item__1u0ZO\",\"excretion\":\"Navbar_excretion__3wQwC\",\"activeLink\":\"Navbar_activeLink__xDy0M\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\n\r\nlet initialState = {}\r\n\r\nconst sidebarReducer =(state = initialState, action) => {\r\n\r\n\r\n    return state;\r\n\r\n}\r\n\r\nexport default sidebarReducer","\r\n\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u;\r\n    })\r\n}\r\n\r\n","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET__CURRENT_PAGE = 'SET__CURRENT_PAGE';\r\nconst SET__TOTAL_USERS_COUNT = 'SET__TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n}\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,               \r\n                // //или так users: [...state.users]\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return { ...u, followed: true }\r\n                //     }\r\n                //     return u;\r\n                // })\r\n                users: updateObjectInArray (state.users,  action.userId, \"id\", {followed: true} )\r\n            }\r\n\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return { ...u, followed: false }\r\n                //     }\r\n                //     return u;\r\n                // })\r\n                users: updateObjectInArray (state.users,  action.userId, \"id\", {followed: false} )\r\n            }\r\n            \r\n        case SET_USERS:\r\n            return { ...state, users: action.users }\r\n\r\n        case SET__CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n\r\n        case SET__TOTAL_USERS_COUNT:\r\n            return { ...state, totalUsersCount: action.count }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET__CURRENT_PAGE, currentPage: currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET__TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching: isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const requestUsers = (currentPage, pageSize) => (dispatch) => {\r\n//     dispatch(toggleIsFetching(true));\r\n//     dispatch(setCurrentPage(currentPage));\r\n//     usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n//         dispatch(setUsers(data.items));\r\n//         dispatch(setTotalUsersCount(data.totalCount));\r\n//         dispatch(toggleIsFetching(false));\r\n//     });\r\n// }\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(currentPage));\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n    dispatch(toggleIsFetching(false));\r\n}\r\n\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response =await apiMethod(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer","import { authAPI } from '../api/api'\r\nimport { stopSubmit } from 'redux-form'\r\n\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, payload: { userId, email, login, isAuth } })\r\n\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\n\r\n// export const login = (email, password, rememberMe) => (dispatch) => {\r\n//     return authAPI.login(email, password, rememberMe).then(response => {\r\n//         if (response.data.resultCode === 0) {\r\n//             dispatch(setAuthUserData())\r\n//         } else {\r\n//             let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n//             dispatch(stopSubmit(\"login\", { _error: message }))\r\n//         }\r\n//     });\r\n// }\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit(\"login\", { _error: message }))\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    authAPI.logout().then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n    });\r\n}\r\n\r\n\r\nexport default authReducer","import { authAPI } from '../api/api'\r\nimport { stopSubmit } from 'redux-form'\r\nimport { getAuthUserData } from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n\r\n    initialized: false,\r\n\r\n}\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS })\r\n\r\n\r\nexport const initializeAPP = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n\r\n    // promise.then(() => {\r\n    //     dispatch(initializedSuccess())\r\n    // })\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default appReducer","import { applyMiddleware, combineReducers, createStore, } from \"redux\";\r\n\r\n\r\n\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer} from \"redux-form\"\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\n\r\n//исх. код\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n\r\n//вылетает бага из-за composeWithDevTools()- при уст. Redux Dev Tools\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware), composeWithDevTools());\r\n\r\n\r\n//исправил ошибку, Redux Dev Tools работает\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(applyMiddleware(thunkMiddleware)\r\n  ));\r\n\r\n\r\nwindow.__store__ = store;\r\n\r\n\r\nexport default store;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './Header.module.css';\r\nimport css from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={css.header}>\r\n            <img src=\"https://img.freepik.com/free-vector/colorful-market-logo-with-gradient_23-2148472540.jpg?size=338&ext=jpg\" />\r\n            <div className={css.loginBlog}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header\r\n\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return < Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer)\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Navbar.module.css';\r\n// console.log (classes)\r\n\r\n// let classes = {\r\n//   \"nav\": \"Navbar_nav__2TYTk\",\r\n//   \"item\": \"Navbar_nav__2TYTkNavbar_item__2OTN9\",\r\n// }\r\n\r\n\r\n// // делаем 2 класса у тега\r\n// let c1 =\"item\";\r\n// let c1 =\"active\";\r\n//     //item active\r\n// let s= c1 + \" \" + c2;\r\n//     //или так\r\n// let sNew= `${c1} ${c2}`;//новая запись всвязи с появлением ECMAScript 6 (см.шаблонные строки)  ``-это шаблонная строка;  js код внедряется с пом.фигурных скобок, пробел между {}  воспринимается как сторка; с1 и с2 это переменные; браузер превращает выражение ${c1} и ${c2} в строку , на выходе имеем item active. НА ВЫХОДЕ КОНКАТЕНАЦИЯ СТРОК С ПРОБЕЛОМ!!!!\r\n\r\n//{`${classes.item} ${classes.excretion}`}>  первые фигургые скобки говорят что внутри jsx будет строка js, вторые скобки говорят что внутри строки будет еще js код\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={classes.nav}>\r\n      {/* <div className= {classes.item +\" \"+ classes.excretion}>   альтернативный вариант записи  {`${classes.item} ${classes.excretion}`}*/}\r\n      <div className={`${classes.item} ${classes.excretion}`}> \r\n      \r\n        {/* <a href=\"/profile\">Profile</a>     если оставить ссылку страница будет перзагржаться  <NavLink to=\"/profile\">Profile</NavLink>-страница не перезагружается  NavLink это компонета to-атрибут компонеты  атрибуты по итогк превращаются в props*/}\r\n\r\n        <NavLink to=\"/profile\" activeClassName={classes.activeLink}>Profile</NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={classes.activeLink}>Messages</NavLink>\r\n      </div>\r\n\r\n      \r\n      <div className={classes.item}>\r\n        <NavLink to=\"/users\" activeClassName={classes.activeLink}>Users</NavLink>\r\n      </div>\r\n\r\n\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/news\" activeClassName={classes.activeLink}>News</NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/music\" activeClassName={classes.activeLink}>Music</NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/settings\" activeClassName={classes.activeLink}>Settings</NavLink>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nexport default Navbar","import React, { useState } from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\"\r\n\r\n//первый вариант\r\n// let Paginator = (props) => {\r\n//     let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n//     let pages = []\r\n//     for (let i = 1; i <= pagesCount; i++) {\r\n//         pages.push(i);\r\n//     }\r\n//     return <div>\r\n//         {pages.map(pageNum => {\r\n//             return <span className={props.currentPage === pageNum && styles.selectedPage}\r\n//                 onClick={(e) => { props.onPageChanged(pageNum) }} >{pageNum}</span>\r\n//         })}\r\n//     </div>\r\n// }\r\n\r\n\r\n\r\n\r\n//в качвестве альтернативы прокидываю в аргумент деструктурированные props\r\n// let Paginator = ({totalUsersCount,onPageChanged,pageSize,currentPage, ...props}) => {\r\n//     let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n//     let pages = []\r\n//     for (let i = 1; i <= pagesCount; i++) {\r\n//         pages.push(i);\r\n//     }\r\n//     return <div className={styles.pageNumbers}>\r\n//         {pages.map(pageNum => {\r\n//             return <span className={currentPage === pageNum && styles.selectedPage}\r\n//                 onClick={(e) => { onPageChanged(pageNum) }} >{pageNum}</span>\r\n//         })}\r\n//     </div>\r\n// }\r\n\r\n\r\n\r\n//финал\r\nlet Paginator = ({ totalItemsCount, onPageChanged, pageSize, currentPage, portionSize = 10 }) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionNumber = portionNumber * portionSize\r\n\r\n    return <div className={styles.paginator}>\r\n\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n\r\n\r\n        {pages\r\n            .filter(pageNum => pageNum >= leftPortionNumber && pageNum <= rightPortionNumber)\r\n            .map(pageNum => {\r\n\r\n                return <span className={cn({\r\n                    [styles.selectedPage]: currentPage === pageNum\r\n                }, styles.pageNumber)}\r\n                    key={pageNum}\r\n\r\n\r\n                    onClick={() => {\r\n                        onPageChanged(pageNum)\r\n                    }}>{pageNum}</span>\r\n            })}\r\n\r\n\r\n\r\n\r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/user.ab7efdc7.png\";","import React from 'react';\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport styles from './users.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow,   ...props }) => {\r\n    return <div>\r\n        <span>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id} >\r\n                    <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto} />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        unfollow(user.id)\r\n                    }}>UnFollow</button>\r\n                    : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        follow(user.id)\r\n                    }}>Follow</button>}\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <span>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </span>\r\n            <span>\r\n                <div>{\"user.location.country\"}</div>\r\n                <div>{\"user.location.city\"}</div>\r\n            </span>\r\n        </span>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator'\r\nimport User from './User'\r\n\r\nlet Users = ({ currentPage, totalUsersCount, pageSize, onPageChanged, ...props }) => {\r\n\r\n\r\n    return <div>\r\n        <Paginator currentPage={currentPage}\r\n            onPageChanged={onPageChanged}\r\n            totalItemsCount={totalUsersCount}\r\n            pageSize={pageSize} />\r\n\r\n        {\r\n            props.users.map(u => <User user={u}\r\n                followingInProgress={props.followingInProgress}\r\n                unfollow={props.unfollow}\r\n                follow={props.follow}\r\n                key={u.id} />\r\n            )\r\n        }\r\n    </div >\r\n}\r\n\r\nexport default Users; ","export const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers } from '../../redux/users-reducer';\r\n\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader.jsx';\r\n\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../redux/users-selectors'\r\n\r\n\r\n\r\n\r\n//контейнерная компонета 1-го уровня(иначе API-уровня, она является классовой) , которая делает ajaх запросы на сервер в методе componentDidMount() и непосредственно оборачивает призентационную компонету Users (через render() и return). Также через нее транзитом проходят пропсы от контейнерной компоненты 1-го уровня (connect)\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n\r\n        // this.props.toggleIsFetching(true);\r\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n        //     this.props.setUsers(data.items);\r\n        //     this.props.setTotalUsersCount(data.totalCount);\r\n        //     this.props.toggleIsFetching(false);\r\n        // });\r\n\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    onPageChanged = (pageNumber) => {\r\n\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.requestUsers(pageNumber, this.props.pageSize)\r\n\r\n        // this.props.setCurrentPage(pageNumber);\r\n        // this.props.toggleIsFetching(true);\r\n        // usersAPI.getUsers(pageNumber, this.props.pageSize)\r\n        //     .then(data => {\r\n        //         this.props.setUsers(data.items);\r\n        //         this.props.toggleIsFetching(false);\r\n        //     });\r\n    }\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//первый вариант записи кода\r\n// let withRedirect = withAuthRedirect (UsersContainer)\r\n// export default connect(mapStateToProps,\r\n//     {\r\n//         follow, unfollow,\r\n//         setCurrentPage,\r\n//         toggleFollowingProgress,\r\n//         getUsers\r\n//     })\r\n//     (withRedirect);\r\n\r\n\r\n\r\n//второй вариант записи кода\r\n// export default withAuthRedirect(connect(mapStateToProps,\r\n//     {\r\n//         follow, unfollow,\r\n//         setCurrentPage,\r\n//         toggleFollowingProgress,\r\n//         getUsers\r\n//     })\r\n//     (UsersContainer));\r\n\r\n\r\n\r\n\r\n//третий вариант\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            follow, unfollow,\r\n            setCurrentPage,\r\n            toggleFollowingProgress,\r\n            requestUsers: requestUsers\r\n        }),\r\n    //withAuthRedirect\r\n)\r\n    (UsersContainer)","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nimport { required } from '../../utils/validators/validators';\r\nimport { Input, CreateField } from '../common/FormsControl/FormsControl';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer'\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from \"../common/FormsControl/FormsControl.module.css\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const LoginForm = (props) => {\r\n//     return (\r\n//         <form onSubmit={props.handleSubmit}>\r\n//             <div>\r\n//                 <Field placeholder={\"Email\"} name={\"email\"} component={Input} validate={[required]} />\r\n//             </div>\r\n//             <div>\r\n//                 <Field placeholder={\"Password\"} name={\"password\"} component={Input} validate={[required]} type={\"password\"} />\r\n//             </div>\r\n//             <div>\r\n//                 <label>\r\n//                     <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input} /> remember me\r\n//                 </label>\r\n//             </div>\r\n//             {props.error && <div className={style.formSummaryError}>{props.error }</div>}\r\n//             <button>Login</button>\r\n//         </form>\r\n//     )\r\n// }\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            {CreateField(\"Email\", \"email\", [required], Input)}\r\n            {CreateField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n            {CreateField(null, \"rememberMe\", [required], Input, { type: \"checkbox\" }, \"remember me\")}\r\n            {error && <div className={style.formSummaryError}>{error}</div>}\r\n            <button>Login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        //console.log(formData)\r\n        //{console.log(formData)}---здесь имеются все данные собранные в форме, эти данные можно задиспатчить в санку чтобы отправить на сревер\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login)","import React from 'react';\r\nimport './News.module.css'\r\nimport classes from './News.module.css'\r\n\r\n\r\nconst News = (props) => {\r\n\r\n    return (\r\n      <div>\r\n  \r\n        News\r\n         \r\n      </div>\r\n    );\r\n  \r\n  }\r\n\r\n\r\n\r\nexport default News","import React from 'react';\r\nimport classes from './Music.module.css'\r\n\r\n\r\nconst Music = (props) => {\r\n\r\n    return (\r\n      <div>\r\n  \r\n        Music\r\n         \r\n      </div>\r\n    );\r\n  \r\n  }\r\n\r\n\r\n\r\nexport default Music","import React from 'react';\r\nimport './Settings.module.css'\r\nimport classes from './Settings.module.css'\r\n\r\n\r\nconst Settings = (props) => {\r\n\r\n    return (\r\n      <div>\r\n  \r\n        Settings\r\n         \r\n      </div>\r\n    );\r\n  \r\n  }\r\n\r\n\r\n\r\nexport default Settings","import logo from './logo.svg';\nimport './App.css';\nimport React, { Suspense } from 'react';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Navbar from './components/Navbar/Navbar';\nimport UsersContainer from './components/Users/UsersContainer';\n\nimport LoginPage from './components/Login/Login';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport { Route, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { initializeAPP, initialized } from './redux/app-reducer';\nimport Preloader from './components/common/Preloader/Preloader';\nimport store from './redux/redux-store';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { withSuspense } from './hoc/withSuspense';\n\n// import DialogsContainer from './components/Dialogs/DialogsContainer';\nconst DialogsContainer = React.lazy (() => import('./components/Dialogs/DialogsContainer'));\n// import ProfileContainer from './components/Profile/ProfileContainer';\nconst ProfileContainer = React.lazy (() => import('./components/Profile/ProfileContainer'));\n\n\n\n\n\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeAPP();\n  }\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    } else {\n      return (\n        <div className='app-wrapper' >\n          <HeaderContainer />\n          <Navbar />\n          <div className='app-wrapper-content'>\n\n            <Route path='/profile/:userId?' render={() => {return <React.Suspense fallback ={ <Preloader/> }  > <ProfileContainer /> </React.Suspense> } } />\n            {/* <Route path='/dialogs' render={() => {return <React.Suspense fallback ={ <Preloader/> }  > <DialogsContainer /> </React.Suspense> } } /> */}\n            <Route path='/dialogs' render={withSuspense (DialogsContainer)} />\n\n\n\n            <Route path='/users' render={() => <UsersContainer />} />\n            <Route path='/login' render={() => <LoginPage />} />\n            <Route path='/news' render={() => <News />} />\n            <Route path='/music' render={() => <Music />} />\n            <Route path='/settings' render={() => <Settings />} />\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\n\nlet mapStateToProps = (state) => {\n  return {\n    initialized: state.app.initialized\n  }\n}\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeAPP }))(App)\n\n// const JSApp = (props) => {\n//   return <BrowserRouter>\n//     <Provider store={store} >\n//       <AppContainer />\n//     </Provider>\n//   </BrowserRouter>\n// }\n\n\nconst JSApp = (props) => {\n  return <HashRouter>\n    <Provider store={store} >\n      <AppContainer />\n    </Provider>\n  </HashRouter>\n}\n\nexport default JSApp","import React from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n      return  <React.Suspense fallback={<Preloader />}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    }\r\n}\r\n\r\n\r\n","import './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/redux-store'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport JSApp from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\n\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(<JSApp />, document.getElementById('root'));\n}\n\nrerenderEntireTree();\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/preloader.6e92ccc0.gif\";","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.gif';\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return <div style={{backgroundColor:'transparent'}}><img src={preloader} /></div>\r\n}\r\n\r\nexport default Preloader","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport styles from './FormsControl.module.css'\r\nimport { Field } from 'redux-form';\r\n\r\n\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n// export const Textarea = ({ input, meta, ...props }) => {\r\n//     const hasError = meta.touched && meta.error\r\n//     return (\r\n//         <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n//             <div>\r\n//                 <textarea {...input} {...props} />\r\n//             </div>\r\n//             {hasError && <span>{meta.error}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return <FormControl {...props}>\r\n        <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n}\r\n\r\n\r\n\r\n\r\n// export const Input = ({ input, meta, ...props }) => {\r\n//     const hasError = meta.touched && meta.error\r\n//     return (\r\n//         <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n//             <div>\r\n//                 <input {...input} {...props} />\r\n//             </div>\r\n//             {hasError && <span>{meta.error}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return <FormControl {...props}>\r\n        <input {...input} {...restProps} />\r\n    </FormControl>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const CreateField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n            name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__3ayI4\",\"error\":\"FormsControl_error__1Bi8G\",\"formSummaryError\":\"FormsControl_formSummaryError__s8oko\"};","export const required = value => {\r\n    if (!!value)\r\n        return undefined\r\n    return \"Field is required\"\r\n}\r\n\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\r\n    if (value.length > maxLength)\r\n        return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const maxLength30 = value => {\r\n//     if (value.length > 30)\r\n//         return \"Max length is 30 symbols\"\r\n//     return undefined\r\n// }","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__KziYg\",\"loginBlog\":\"Header_loginBlog__1yXqQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1R7nB\",\"pageNumber\":\"Paginator_pageNumber__3Y99z\",\"selectedPage\":\"Paginator_selectedPage__1NopV\"};","import { usersAPI, profileAPI } from '../api/api'\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, likesCount: 324, message: \"Hi, how are you\" },\r\n        { id: 2, likesCount: 33, message: \"It's my first post!\" },\r\n        { id: 3, likesCount: 5343423, message: \"goodbay\" },\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 4,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: '',\r\n            };\r\n        };\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile: profile })\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\r\n\r\n\r\n\r\n// export const getUserProfile = (userId) => (dispatch) => {\r\n//     usersAPI.getProfile(userId).then(response => {\r\n//         dispatch(setUserProfile(response.data));\r\n//     });\r\n// }\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\n\r\n\r\n// export const getStatus = (userId) => (dispatch) => {\r\n//     profileAPI.getStatus(userId).then(response => {\r\n//         dispatch(setStatus(response.data));\r\n//     });\r\n// }\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\n\r\n// export const updateStatus = (status) => (dispatch) => {\r\n//     profileAPI.updateStatus(status).then(response => {\r\n//         if (response.data.resultCode === 0) {\r\n//             dispatch(setStatus(status));\r\n//         }\r\n//     });\r\n// }\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default profileReducer"],"sourceRoot":""}