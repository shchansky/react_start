{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","active","to","name","Message","dialogs","message","maxLength30","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","messagesPage","dialogsElements","map","d","messagesElements","messages","m","newMessageBody","isAuth","dialogsItems","values","sendMessage","compose","connect","dispatch","updateSendMessageCreator","withAuthRedirect"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,2FCe/HC,EAXI,SAACC,GAClB,IAAIC,EAAM,YAAcD,EAAME,GAC9B,OACE,qBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,OAA/C,SACE,cAAE,IAAF,CAAUC,GAAIN,EAAd,SAAqBD,EAAMQ,UCKlBC,EATC,SAACT,GACf,OACE,qBAAKG,UAAWC,IAAQM,QAAxB,SAAkCV,EAAMW,W,yCC2CtCC,EAAcC,YAAiB,IAoB/BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAlBL,SAACf,GACtB,OACE,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACE,8BAEE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAChBb,KAAM,iBACNc,SAAU,CAACC,IAAUX,GACrBY,YAAa,4BAIjB,8BAAK,kDAUIC,EA7DC,SAACzB,GAEf,IAAI0B,EAAQ1B,EAAM2B,aAEdC,EAAkBF,EAAMhB,QAAQmB,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYtB,KAAMsB,EAAC,KAAqB5B,GAAI4B,EAAE5B,IAAZ4B,EAAE5B,OAC7E6B,EAAmBL,EAAMM,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAE/B,OAC9DwB,EAAMQ,eAQ3B,OAAqB,IAAjBlC,EAAMmC,OAAyB,cAAC,IAAD,CAAU5B,GAAI,WAM/C,gCACE,sBAAKJ,UAAWC,IAAQM,QAAxB,UACE,qBAAKP,UAAWC,IAAQgC,aAAxB,SACGR,IAEH,qBAAKzB,UAAWC,IAAQ4B,SAAxB,SACGD,OAIL,cAACjB,EAAD,CAAqBG,SArBL,SAACoB,GACnBrC,EAAMsC,YAAYD,EAAOH,uB,wBCiBdK,4BACbC,aA1BoB,SAACd,GACrB,MAAO,CACLC,aAAcD,EAAMC,iBAIC,SAACc,GACxB,MAAO,CACLH,YAAa,SAACJ,GACZO,EAASC,YAAyBR,SAkBtCS,IAFaJ,CAGbd","file":"static/js/4.bede0884.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3ZE-j\",\"dialogsItems\":\"Dialogs_dialogsItems__87UB-\",\"active\":\"Dialogs_active__3GIyl\",\"messages\":\"Dialogs_messages__iq5av\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './../Dialogs.module.css'\r\n\r\n\r\nconst DialogItem = (props) => {\r\n  let path =\"/dialogs/\" + props.id\r\n  return (\r\n    <div className={classes.dialog + \" \" + classes.active}>\r\n      < NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport classes from './../Dialogs.module.css'\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={classes.dialogs}>{props.message}</div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Message","import React from 'react';\r\nimport classes from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../common/FormsControl/FormsControl';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.messagesPage;\r\n\r\n  let dialogsElements = state.dialogs.map(d => <DialogItem name={d[\"name\"]} key={d.id} id={d.id} />);\r\n  let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n  let newMessageBody = state.newMessageBody;\r\n\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody)\r\n  }\r\n\r\n\r\n  if (props.isAuth === false) return <Redirect to={'/login'} />\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.dialogs}>\r\n        <div className={classes.dialogsItems}>\r\n          {dialogsElements}\r\n        </div>\r\n        <div className={classes.messages}>\r\n          {messagesElements}\r\n        </div>\r\n      </div>\r\n\r\n      <AddMessageFormRedux onSubmit={addNewMessage} />\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nconst maxLength30 = maxLengthCreator(30)\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n\r\n        <Field component={Textarea}\r\n          name={\"newMessageBody\"}\r\n          validate={[required, maxLength30]}\r\n          placeholder={\"Enter your message!!!\"}\r\n\r\n        />\r\n      </div>\r\n      <div><button>Send</button></div>\r\n    </form>\r\n\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm)\r\n\r\n\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport { updateSendMessageCreator } from '../../redux/messages-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\n\r\nimport { Redirect } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    messagesPage: state.messagesPage,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(updateSendMessageCreator(newMessageBody))\r\n    },\r\n\r\n    // updateNewMessageBody: (body) => {\r\n    //   dispatch(updateNewMessageBodyCreator(body));\r\n    // }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}