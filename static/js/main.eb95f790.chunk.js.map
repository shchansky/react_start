{"version":3,"sources":["redux/messages-reducer.js","assets/images/user.png","api/api.js","components/Users/users.module.css","hoc/withAuthRedirect.js","components/Navbar/Navbar.module.css","components/common/FormsControl/FormsControl.js","reportWebVitals.js","redux/sidebar-reducer.js","utils/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","logo.svg","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Login/Login.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","App.js","hoc/withSuspense.js","index.js","assets/images/preloader.gif","components/common/Preloader/Preloader.jsx","components/common/FormsControl/FormsControl.module.css","utils/validators/validators.js","components/Header/Header.module.css","components/common/Paginator/Paginator.module.css","redux/profile-reducer.js"],"names":["SEND_MESSAGE","initialState","dialogs","id","name","messages","message","updateSendMessageCreator","newMessageBody","type","messagesReducer","state","action","body","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","module","exports","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponet","this","props","to","React","connect","FormControl","input","meta","child","hasError","touched","error","className","styles","formControl","children","Textarea","restProps","Input","CreateField","placeholder","validators","component","text","validate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET__CURRENT_PAGE","SET__TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","url","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","messagesPage","sidebar","usersPage","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Header","css","header","src","loginBlog","onClick","HeaderContainer","Navbar","classes","nav","item","excretion","activeClassName","activeLink","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","paginator","pageNum","cn","selectedPage","pageNumber","User","user","photos","small","userPhoto","disabled","some","Users","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","Preloader","bind","totalCount","LoginReduxForm","reduxForm","handleSubmit","onSubmit","required","style","formSummaryError","length","stopSubmit","_error","News","Music","Settings","DialogsContainer","lazy","ProfileContainer","App","initializeAPP","path","render","Suspense","fallback","AppContainer","withRouter","promise","Promise","all","JSApp","ReactDOM","document","getElementById","backgroundColor","preloader","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","reject","newPost","p","postId"],"mappings":"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","file":"static/js/main.eb95f790.chunk.js","sourcesContent":["\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: \"Michail\" },\r\n        { id: 2, name: \"Oxana\" },\r\n        { id: 3, name: \"Slava\" },\r\n        { id: 4, name: \"Lera\" },\r\n        { id: 5, name: \"Lena\" },\r\n        { id: 5, name: \"Lena\" },\r\n    ],\r\n    messages: [\r\n        { id: 1, message: \"Hi\" },\r\n        { id: 2, message: \"how are you?\" },\r\n        { id: 3, message: \"Privet!!\" },\r\n        { id: 4, message: \"Privet!!\" },\r\n        { id: 5, message: \"Privet!!\" },\r\n    ],\r\n}\r\n\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n\r\n\r\n\r\n    switch (action.type) {\r\n\r\n            \r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return  {\r\n                ...state,\r\n                messages: [...state.messages, { id: 6, message: body }],\r\n            };\r\n            \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const updateSendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody })\r\n\r\n\r\n\r\n\r\nexport default messagesReducer","export default __webpack_public_path__ + \"static/media/user.ab7efdc7.png\";","import * as axios from 'axios';\r\n\r\n\r\n// const baseUrl = 'https://social-network.samuraijs.com/api/1.0/'\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"6bf479bf-fcae-4561-a59e-07ba9dc0a182\"\r\n    }\r\n});\r\n//благодаря withCredentials: true, наша кука цепляется к запросу с http://localhost:3000/ на другой домен и этот домен понимает что мы авторизованы\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        // return instance.get(`profile/` + userId)\r\n\r\n        //или так\r\n        console.warn('Obsolete method. Pleas used profileAPI object.')\r\n        return profileAPI.getProfile(userId)\r\n    },\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status })\r\n    },\r\n\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData()\r\n        formData.append('image', photoFile)\r\n        return instance.put(`/profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha })\r\n        //входим в систему, сервер сохранил куку с email, password ,rememberMe\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n        //вылогиниваемся, сервер удаляет куку\r\n    }\r\n}\r\n\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    },\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__250Jm\",\"selectedPage\":\"users_selectedPage__3wZm-\",\"pageNumbers\":\"users_pageNumbers__tEIVJ\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponet extends React.Component {\r\n        render() {\r\n            if (this.props.isAuth === false) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponet = connect(mapStateToPropsForRedirect)(RedirectComponet)\r\n\r\n\r\n    return ConnectedAuthRedirectComponet\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3__R3\",\"item\":\"Navbar_item__1u0ZO\",\"excretion\":\"Navbar_excretion__3wQwC\",\"activeLink\":\"Navbar_activeLink__xDy0M\"};","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport styles from './FormsControl.module.css'\r\nimport { Field } from 'redux-form';\r\n\r\n\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n    const hasError = meta.touched && meta.error\r\n    \r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n//в input----достаем поле name у props.input --необходимо для целевой компоненты которую оборачивает ф-я FormControl\r\n//в объекте meta что в пропсах есть поле (св-во) error--- meta.error куда выводится сообщение об ошибке, а также поле touched ---meta.touched в нем информация был тронут тег input в DOM\r\n//child что в пропсах, при debugger дает indefined. child ---им будут <textarea {...input} {...restProps} />  и  <input {...input} {...restProps} />  которые оборачиваются ф-ей FormControl. Т.е. child нужен для того чтобы что-то положить внутрь FormControl\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const Textarea = ({ input, meta, ...props }) => {\r\n//     const hasError = meta.touched && meta.error\r\n//     return (\r\n//         <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n//             <div>\r\n//                 <textarea {...input} {...props} />\r\n//             </div>\r\n//             {hasError && <span>{meta.error}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    \r\n    return <FormControl {...props}>\r\n        <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n}\r\n//input, meta, child, ...restProps  ---прокидываются в пропсах от компоненты <Field component={Textarea} /> у которой в есть атрибут {Textarea}. Если поставить debugger перед return в ф-ии Textarea то в окне Sources можно увидеть объект с этими props\r\n//...input----достаем поле name у props.input \r\n//в объекте meta есть поле (св-во) error--- meta.error куда выводится сообщение об ошибке, а также поле touched ---meta.touched в нем информация был тронут тег input в DOM\r\n//child что в пропсах, при debugger дает indefined. child ---им будут <textarea {...input} {...restProps} />  и  <input {...input} {...restProps} />  которые оборачиваются ф-ей FormControl. Т.е. child нужен для того чтобы что-то положить внутрь FormControl\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const Input = ({ input, meta, ...props }) => {\r\n//     const hasError = meta.touched && meta.error\r\n//     return (\r\n//         <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n//             <div>\r\n//                 <input {...input} {...props} />\r\n//             </div>\r\n//             {hasError && <span>{meta.error}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return <FormControl {...props}>\r\n        <input {...input} {...restProps} />\r\n    </FormControl>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const CreateField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n            name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\n\r\nlet initialState = {}\r\n\r\nconst sidebarReducer =(state = initialState, action) => {\r\n\r\n\r\n    return state;\r\n\r\n}\r\n\r\nexport default sidebarReducer","\r\n\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u;\r\n    })\r\n}\r\n\r\n","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET__CURRENT_PAGE = 'SET__CURRENT_PAGE';\r\nconst SET__TOTAL_USERS_COUNT = 'SET__TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n}\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,               \r\n                // //или так users: [...state.users]\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return { ...u, followed: true }\r\n                //     }\r\n                //     return u;\r\n                // })\r\n                users: updateObjectInArray (state.users,  action.userId, \"id\", {followed: true} )\r\n            }\r\n\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return { ...u, followed: false }\r\n                //     }\r\n                //     return u;\r\n                // })\r\n                users: updateObjectInArray (state.users,  action.userId, \"id\", {followed: false} )\r\n            }\r\n            \r\n        case SET_USERS:\r\n            return { ...state, users: action.users }\r\n\r\n        case SET__CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n\r\n        case SET__TOTAL_USERS_COUNT:\r\n            return { ...state, totalUsersCount: action.count }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET__CURRENT_PAGE, currentPage: currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET__TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching: isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const requestUsers = (currentPage, pageSize) => (dispatch) => {\r\n//     dispatch(toggleIsFetching(true));\r\n//     dispatch(setCurrentPage(currentPage));\r\n//     usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n//         dispatch(setUsers(data.items));\r\n//         dispatch(setTotalUsersCount(data.totalCount));\r\n//         dispatch(toggleIsFetching(false));\r\n//     });\r\n// }\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(currentPage));\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n    dispatch(toggleIsFetching(false));\r\n}\r\n\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response =await apiMethod(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer","import { authAPI, securityAPI } from '../api/api'\r\nimport { stopSubmit } from 'redux-form'\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null //если null значит капча не обязательна\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        case GET_CAPTCHA_URL_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, payload: { userId, email, login, isAuth } })\r\n\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({ type: GET_CAPTCHA_URL_SUCCESS, payload: { captchaUrl } })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    //getAuthUserData вызывается также в app-reducer, он диспатчить в sate isAuth: true , таким образом логизация подверждается\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\n// export const login = (email, password, rememberMe) => (dispatch) => {\r\n//     return authAPI.login(email, password, rememberMe).then(response => {\r\n//         if (response.data.resultCode === 0) {\r\n//             dispatch(setAuthUserData())\r\n//         } else {\r\n//             let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n//             dispatch(stopSubmit(\"login\", { _error: message }))\r\n//         }\r\n//     });\r\n// }\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        //response.data.resultCode === 0   ответ с сервера что мы авторизованы\r\n        dispatch(setAuthUserData())\r\n    } else {\r\n\r\n\r\n        if (response.data.resultCode === 10) {\r\n            //response.data.resultCode === 10 ----число 10 взято с докуиентации в пдф и применяется для капчи\r\n            dispatch (getCaptchaUrl())\r\n        }\r\n\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit(\"login\", { _error: message }))\r\n        //stopSubmit импопртируется из redux-form и необходим для останова отправки данных с формы; \"login\" это уникальное название формы в файле Login.js, которое приводится при оборачивании хоком reduxForm целевой компоненты возвращающей тег <form />; { _error: message }--- _error -форма получает ОБЩУЮ ОШИБКУ на всю систему(т.е. всю форму); в message прилетает текст ошибки с сервера потом этот message диспатчиьтся stopSubmit в форму \"login\" в файле Login.js\r\n        //если вместо _error указать поле формы, соответсвующее атрибуту name и вместо message  указать в \"\" кастомный текст сообщения, то ошибка вылезет в этом поле, но так лучше делать т.к. это подсказка хакерам--ПОСМОТРИ ЕЩЕ КОД в FormControl\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    authAPI.logout().then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n    });\r\n}\r\n\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    let response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n    //getCaptchaUrl дергается  в коде thunk-creator login\r\n\r\n}\r\n\r\n\r\nexport default authReducer","import { authAPI } from '../api/api'\r\nimport { stopSubmit } from 'redux-form'\r\nimport { getAuthUserData } from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n\r\n    initialized: false,\r\n\r\n}\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS })\r\n\r\n\r\nexport const initializeAPP = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n\r\n    // promise.then(() => {\r\n    //     dispatch(initializedSuccess())\r\n    // })\r\n    //после того как промис dispatch(getAuthUserData()) зарезолвится  он вернет нам промис, у которого будет доступен метод then (в противном случае если у промиса resolve не было, то метод then не выполнится)  и только после этого будет задиспатчитена ф-я  initializedSuccess() через метод  у промиса который вернулся\r\n\r\n\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        })\r\n//если вдруг для аторизации нам необходимо сделать несколько независимых асинхронных диспатчей с асинхр. запросами на сервер и только после их завершения запустить инициализационный AC типа initializedSuccess(), применяем конструкцию Promise.all([promise]) вместо [promise] можно показать [promise1, promise2, promise3 .... ] заранее присвоив promise1, promise2, promise3 вызовы функций dispatch (.......)\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default appReducer","import { applyMiddleware, combineReducers, createStore, } from \"redux\";\r\n\r\n\r\n\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer} from \"redux-form\"\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\n\r\n//исх. код\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n\r\n//вылетает бага из-за composeWithDevTools()- при уст. Redux Dev Tools\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware), composeWithDevTools());\r\n\r\n\r\n//исправил ошибку, Redux Dev Tools работает\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(applyMiddleware(thunkMiddleware)\r\n  ));\r\n\r\n\r\nwindow.__store__ = store;\r\n//window.__store__.getState()\r\n\r\n\r\nexport default store;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './Header.module.css';\r\nimport css from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={css.header}>\r\n            <img src=\"https://img.freepik.com/free-vector/colorful-market-logo-with-gradient_23-2148472540.jpg?size=338&ext=jpg\" />\r\n            <div className={css.loginBlog}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header\r\n\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n//асинхронный запрос для отображения Header удалил, и реализовал его в App.js\r\n\r\n    render() {\r\n        return < Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer)\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Navbar.module.css';\r\n// console.log (classes)\r\n\r\n// let classes = {\r\n//   \"nav\": \"Navbar_nav__2TYTk\",\r\n//   \"item\": \"Navbar_nav__2TYTkNavbar_item__2OTN9\",\r\n// }\r\n\r\n\r\n// // делаем 2 класса у тега\r\n// let c1 =\"item\";\r\n// let c1 =\"active\";\r\n//     //item active\r\n// let s= c1 + \" \" + c2;\r\n//     //или так\r\n// let sNew= `${c1} ${c2}`;//новая запись всвязи с появлением ECMAScript 6 (см.шаблонные строки)  ``-это шаблонная строка;  js код внедряется с пом.фигурных скобок, пробел между {}  воспринимается как сторка; с1 и с2 это переменные; браузер превращает выражение ${c1} и ${c2} в строку , на выходе имеем item active. НА ВЫХОДЕ КОНКАТЕНАЦИЯ СТРОК С ПРОБЕЛОМ!!!!\r\n\r\n//{`${classes.item} ${classes.excretion}`}>  первые фигургые скобки говорят что внутри jsx будет строка js, вторые скобки говорят что внутри строки будет еще js код\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={classes.nav}>\r\n      {/* <div className= {classes.item +\" \"+ classes.excretion}>   альтернативный вариант записи  {`${classes.item} ${classes.excretion}`}*/}\r\n      <div className={`${classes.item} ${classes.excretion}`}> \r\n      \r\n        {/* <a href=\"/profile\">Profile</a>     если оставить ссылку страница будет перзагржаться  <NavLink to=\"/profile\">Profile</NavLink>-страница не перезагружается  NavLink это компонета to-атрибут компонеты  атрибуты по итогк превращаются в props*/}\r\n\r\n        <NavLink to=\"/profile\" activeClassName={classes.activeLink}>Profile</NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={classes.activeLink}>Messages</NavLink>\r\n      </div>\r\n\r\n      \r\n      <div className={classes.item}>\r\n        <NavLink to=\"/users\" activeClassName={classes.activeLink}>Users</NavLink>\r\n      </div>\r\n\r\n\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/news\" activeClassName={classes.activeLink}>News</NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/music\" activeClassName={classes.activeLink}>Music</NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/settings\" activeClassName={classes.activeLink}>Settings</NavLink>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nexport default Navbar","import React, { useState } from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\"\r\n\r\n//первый вариант\r\n// let Paginator = (props) => {\r\n//     let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n//     let pages = []\r\n//     for (let i = 1; i <= pagesCount; i++) {\r\n//         pages.push(i);\r\n//     }\r\n//     return <div>\r\n//         {pages.map(pageNum => {\r\n//             return <span className={props.currentPage === pageNum && styles.selectedPage}\r\n//                 onClick={(e) => { props.onPageChanged(pageNum) }} >{pageNum}</span>\r\n//         })}\r\n//     </div>\r\n// }\r\n\r\n\r\n\r\n\r\n//в качвестве альтернативы прокидываю в аргумент деструктурированные props\r\n// let Paginator = ({totalUsersCount,onPageChanged,pageSize,currentPage, ...props}) => {\r\n//     let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n//     let pages = []\r\n//     for (let i = 1; i <= pagesCount; i++) {\r\n//         pages.push(i);\r\n//     }\r\n//     return <div className={styles.pageNumbers}>\r\n//         {pages.map(pageNum => {\r\n//             return <span className={currentPage === pageNum && styles.selectedPage}\r\n//                 onClick={(e) => { onPageChanged(pageNum) }} >{pageNum}</span>\r\n//         })}\r\n//     </div>\r\n// }\r\n\r\n\r\n\r\n//финал\r\nlet Paginator = ({ totalItemsCount, onPageChanged, pageSize, currentPage, portionSize = 10 }) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionNumber = portionNumber * portionSize\r\n\r\n    return <div className={styles.paginator}>\r\n\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n\r\n\r\n        {pages\r\n            .filter(pageNum => pageNum >= leftPortionNumber && pageNum <= rightPortionNumber)\r\n            .map(pageNum => {\r\n\r\n                return <span className={cn({\r\n                    [styles.selectedPage]: currentPage === pageNum\r\n                }, styles.pageNumber)}\r\n                    key={pageNum}\r\n\r\n\r\n                    onClick={() => {\r\n                        onPageChanged(pageNum)\r\n                    }}>{pageNum}</span>\r\n            })}\r\n\r\n\r\n\r\n\r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport styles from './users.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow,   ...props }) => {\r\n    return <div>\r\n        <span>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id} >\r\n                    <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto} />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        unfollow(user.id)\r\n                    }}>UnFollow</button>\r\n                    : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        follow(user.id)\r\n                    }}>Follow</button>}\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <span>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </span>\r\n            <span>\r\n                <div>{\"user.location.country\"}</div>\r\n                <div>{\"user.location.city\"}</div>\r\n            </span>\r\n        </span>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator'\r\nimport User from './User'\r\n\r\nlet Users = ({ currentPage, totalUsersCount, pageSize, onPageChanged, ...props }) => {\r\n\r\n\r\n    return <div>\r\n        <Paginator currentPage={currentPage}\r\n            onPageChanged={onPageChanged}\r\n            totalItemsCount={totalUsersCount}\r\n            pageSize={pageSize} />\r\n\r\n        {props.users.map(u => <User user={u}\r\n            followingInProgress={props.followingInProgress}\r\n            unfollow={props.unfollow}\r\n            follow={props.follow}\r\n            key={u.id} />)\r\n        }\r\n    </div >\r\n}\r\n\r\nexport default Users;","export const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers } from '../../redux/users-reducer';\r\n\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader.jsx';\r\n\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../redux/users-selectors'\r\n\r\n\r\n\r\n\r\n//контейнерная компонета 1-го уровня(иначе API-уровня, она является классовой) , которая делает ajaх запросы на сервер в методе componentDidMount() и непосредственно оборачивает призентационную компонету Users (через render() и return). Также через нее транзитом проходят пропсы от контейнерной компоненты 1-го уровня (connect)\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n\r\n        // this.props.toggleIsFetching(true);\r\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n        //     this.props.setUsers(data.items);\r\n        //     this.props.setTotalUsersCount(data.totalCount);\r\n        //     this.props.toggleIsFetching(false);\r\n        // });\r\n\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    onPageChanged = (pageNumber) => {\r\n\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.requestUsers(pageNumber, this.props.pageSize)\r\n\r\n        // this.props.setCurrentPage(pageNumber);\r\n        // this.props.toggleIsFetching(true);\r\n        // usersAPI.getUsers(pageNumber, this.props.pageSize)\r\n        //     .then(data => {\r\n        //         this.props.setUsers(data.items);\r\n        //         this.props.toggleIsFetching(false);\r\n        //     });\r\n    }\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//первый вариант записи кода\r\n// let withRedirect = withAuthRedirect (UsersContainer)\r\n// export default connect(mapStateToProps,\r\n//     {\r\n//         follow, unfollow,\r\n//         setCurrentPage,\r\n//         toggleFollowingProgress,\r\n//         getUsers\r\n//     })\r\n//     (withRedirect);\r\n\r\n\r\n\r\n//второй вариант записи кода\r\n// export default withAuthRedirect(connect(mapStateToProps,\r\n//     {\r\n//         follow, unfollow,\r\n//         setCurrentPage,\r\n//         toggleFollowingProgress,\r\n//         getUsers\r\n//     })\r\n//     (UsersContainer));\r\n\r\n\r\n\r\n\r\n//третий вариант\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            follow, unfollow,\r\n            setCurrentPage,\r\n            toggleFollowingProgress,\r\n            requestUsers: requestUsers\r\n        }),\r\n    //withAuthRedirect\r\n)\r\n    (UsersContainer)","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nimport { required } from '../../utils/validators/validators';\r\nimport { Input, CreateField } from '../common/FormsControl/FormsControl';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer'\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from \"../common/FormsControl/FormsControl.module.css\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const LoginForm = (props) => {\r\n//     return (\r\n//         <form onSubmit={props.handleSubmit}>\r\n//             <div>\r\n//                 <Field placeholder={\"Email\"} name={\"email\"} component={Input} validate={[required]} />\r\n//             </div>\r\n//             <div>\r\n//                 <Field placeholder={\"Password\"} name={\"password\"} component={Input} validate={[required]} type={\"password\"} />\r\n//             </div>\r\n//             <div>\r\n//                 <label>\r\n//                     <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input} /> remember me\r\n//                 </label>\r\n//             </div>\r\n//             {props.error && <div className={style.formSummaryError}>{props.error }</div>}\r\n//             <button>Login</button>\r\n//         </form>\r\n//     )\r\n// }\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            {CreateField(\"Email\", \"email\", [required], Input)}\r\n            {CreateField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n            {CreateField(null, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"remember me\")}\r\n            {captchaUrl && <img src={captchaUrl} />}\r\n            {captchaUrl && CreateField (\"Symbols from image\", \"captcha\", [required], Input, {}, {})}\r\n           \r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <button>Login</button>\r\n        </form>\r\n    )\r\n}\r\n//CreateField см. в файле FormsControl.js . CreateField оборачивает целевую компоненту <Field .Аргументы \"Email\", \"email\", [required], Input и прочеие в ф-ии CreateField прокидываются в атрибуты placeholder, name, validate, Input  соотвественно компоненты <Field .> что приведена в файле FormsControl\r\n//error ---- с сервера прокидывается в пропс сообщение об общей ошибке  -смотри код в auth-reducer.js Прокидывание происходит благодаря методу stopSubmit (из библиотеки redux-form), указанному в auth-reducer.js с привязкой к уникальному имени формы 'login'\r\n// required- функция валидации формы-см.код в validators!!!\r\n//captchaUrl --- прокинута в форму благодаря методу connect\r\n\r\n\r\n\r\n\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        //console.log(formData)\r\n        //{console.log(formData)}---здесь имеются все данные собранные в форме, эти данные можно задиспатчить в санку чтобы отправить на сревер\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n\r\n\r\n        //.email, .password, .rememberMe, .captcha ---это атрибуты name каждой из компонент <Field .> (они сидят в теге form), которые вызывает ф-ия CreateField переедавая эти данные в аргументах \r\n        //formData (можно объявить любое название) ---это JSON объект в котором сидят все данные с формы (обозначена тегом form). В этом JSON объекте сформированы поля с данными имеющие названия  .email, .password, .rememberMe, .captcha благодаря атрибутам name\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n    // captchaUrl в <LoginReduxForm onSubmit={onSubmit} props={}/> появились благодаря connect в которых из mstp прокинули  captchaUrl (т.е. в кач-ве пропс)     Далее из LoginReduxForm, благодаря метому reduxForm, captchaUrl будет прокинута в форму LoginForm\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n    //captchaUrl прокидывается в LoginReduxForm (а потом в ветку form гобального state) через ф-ию Login с методом connect\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login)","import React from 'react';\r\nimport './News.module.css'\r\nimport classes from './News.module.css'\r\n\r\n\r\nconst News = (props) => {\r\n\r\n    return (\r\n      <div>\r\n  \r\n        News\r\n         \r\n      </div>\r\n    );\r\n  \r\n  }\r\n\r\n\r\n\r\nexport default News","import React from 'react';\r\nimport classes from './Music.module.css'\r\n\r\n\r\nconst Music = (props) => {\r\n\r\n    return (\r\n      <div>\r\n  \r\n        Music\r\n         \r\n      </div>\r\n    );\r\n  \r\n  }\r\n\r\n\r\n\r\nexport default Music","import React from 'react';\r\nimport './Settings.module.css'\r\nimport classes from './Settings.module.css'\r\n\r\n\r\nconst Settings = (props) => {\r\n\r\n    return (\r\n      <div>\r\n  \r\n        Settings\r\n         \r\n      </div>\r\n    );\r\n  \r\n  }\r\n\r\n\r\n\r\nexport default Settings","import logo from './logo.svg';\nimport './App.css';\nimport React, { Suspense } from 'react';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Navbar from './components/Navbar/Navbar';\nimport UsersContainer from './components/Users/UsersContainer';\n\nimport LoginPage from './components/Login/Login';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport { Route, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { initializeAPP, initialized } from './redux/app-reducer';\nimport Preloader from './components/common/Preloader/Preloader';\nimport store from './redux/redux-store';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { withSuspense } from './hoc/withSuspense';\n\n// import DialogsContainer from './components/Dialogs/DialogsContainer';\nconst DialogsContainer = React.lazy (() => import('./components/Dialogs/DialogsContainer'));\n// import ProfileContainer from './components/Profile/ProfileContainer';\nconst ProfileContainer = React.lazy (() => import('./components/Profile/ProfileContainer'));\n\n\n\n\n\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeAPP();\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    } else {\n      return (\n        <div className='app-wrapper' >\n          <HeaderContainer />\n          <Navbar />\n          <div className='app-wrapper-content'>\n\n            <Route path='/profile/:userId?' render={() => {return <React.Suspense fallback ={ <Preloader/> }  > <ProfileContainer /> </React.Suspense> } } />\n\n            \n            {/* <Route path='/dialogs' render={() => {return <React.Suspense fallback ={ <Preloader/> }  > <DialogsContainer /> </React.Suspense> } } /> */}\n            <Route path='/dialogs' render={withSuspense (DialogsContainer)} />\n\n\n\n            <Route path='/users' render={() => <UsersContainer />} />\n            <Route path='/login' render={() => <LoginPage />} />\n            <Route path='/news' render={() => <News />} />\n            <Route path='/music' render={() => <Music />} />\n            <Route path='/settings' render={() => <Settings />} />\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\n\nlet mapStateToProps = (state) => {\n  return {\n    initialized: state.app.initialized\n  }\n}\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeAPP }))(App)\n//обертка из withRouter является фишкой кода, если не сделать Preloader будет крутиться даже когда данные придут с сервера\n\n\n\n\n\n// const JSApp = (props) => {\n//   return <BrowserRouter>\n//     <Provider store={store} >\n//       <AppContainer />\n//     </Provider>\n//   </BrowserRouter>\n// }\nconst JSApp = (props) => {\n  return <HashRouter>\n    <Provider store={store} >\n      <AppContainer />\n    </Provider>\n  </HashRouter>\n}\n\nexport default JSApp","import React from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n      return  <React.Suspense fallback={<Preloader />}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    }\r\n}\r\n\r\n\r\n","import './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/redux-store'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport JSApp from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\n\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(<JSApp />, document.getElementById('root'));\n}\n\nrerenderEntireTree();\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/preloader.6e92ccc0.gif\";","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.gif';\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return <div style={{backgroundColor:'transparent'}}><img src={preloader} /></div>\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__3ayI4\",\"error\":\"FormsControl_error__1Bi8G\",\"formSummaryError\":\"FormsControl_formSummaryError__s8oko\"};","export const required = value => {\r\n    if (!!value)\r\n        return undefined\r\n    return \"Field is required\"\r\n}\r\n//value  это данные из <Field ... validate={[required, maxLength10]} .... /> , которые передаюся благодаря атрибуту validate={[required, maxLength10]}  (синтакис принят соглано документации redux-form \r\n\r\n//\"Field is required\" - подсвевается надписью input когда поле не заполнено\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\r\n    if (value.length > maxLength)\r\n        return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n\r\n// аргумент maxLength-содержит максималное кол-во символов и передается при вызове maxLengthCreator в коде где объявлена форма <Field />\r\n//value  это данные из <Field ... validate={[required, maxLength10]} .... /> , которые передаюся благодаря атрибуту validate={[required, maxLength10]}  (синтакис принят соглано документации redux-form )\r\n\r\n\r\n\r\n\r\n\r\n// export const maxLength30 = value => {\r\n//     if (value.length > 30)\r\n//         return \"Max length is 30 symbols\"\r\n//     return undefined\r\n// }","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__KziYg\",\"loginBlog\":\"Header_loginBlog__1yXqQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1R7nB\",\"pageNumber\":\"Paginator_pageNumber__3Y99z\",\"selectedPage\":\"Paginator_selectedPage__1NopV\"};","import { usersAPI, profileAPI } from '../api/api'\r\nimport { stopSubmit } from 'redux-form'\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, likesCount: 324, message: \"Hi, how are you\" },\r\n        { id: 2, likesCount: 33, message: \"It's my first post!\" },\r\n        { id: 3, likesCount: 5343423, message: \"goodbay\" },\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 4,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: '',\r\n                //затирает поле формы ввода текста\r\n            };\r\n        };\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, photos: action.photos }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile: profile })\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\r\nexport const savePhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos })\r\n\r\n\r\n\r\n// export const getUserProfile = (userId) => (dispatch) => {\r\n//     usersAPI.getProfile(userId).then(response => {\r\n//         dispatch(setUserProfile(response.data));\r\n//     });\r\n// }\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\n\r\n\r\n// export const getStatus = (userId) => (dispatch) => {\r\n//     profileAPI.getStatus(userId).then(response => {\r\n//         dispatch(setStatus(response.data));\r\n//     });\r\n// }\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\n\r\n// export const updateStatus = (status) => (dispatch) => {\r\n//     profileAPI.updateStatus(status).then(response => {\r\n//         if (response.data.resultCode === 0) {\r\n//             dispatch(setStatus(status));\r\n//         }\r\n//     });\r\n// }\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    let response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", { _error: response.data.messages[0] }));\r\n        //_error -это общее сообщение об ошибке в библиотеке (приходит в response от сетвера см. Network/Responce) в форму; edit-profile это название формы ProfileDataReduxForm котрая оборачивает целевую к-ту ProfileDataForm в файле ProfileDataForm.js \r\n        //\"edit-profile\" - это название у формы, в нее прилетит пропс error\r\n\r\n\r\n\r\n        //альтернативный хардкодовый вариант-cообщение выводим в поле facebook при наличии в нем ошибки. Домашка -надо распарсить строку (contacts и facebook- то что содержится в атрибуте name у input-см.инспектор элементов )\r\n        // dispatch(stopSubmit(\"edit-profile\", { \"contacts\": {\"facebook\": response.data.messages[0] }   }))\r\n\r\n\r\n\r\n        return Promise.reject (response.data.messages[0])\r\n        //изменения в форме не сохраняются в случае ошибки\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default profileReducer"],"sourceRoot":""}